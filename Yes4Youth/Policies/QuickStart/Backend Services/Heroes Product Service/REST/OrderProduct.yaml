---
type: FilterCircuit
fields:
  start: ./Check the HTTP Method
  name: OrderProduct
  description: ""
children:
- type: ValidateRESTFilter
  fields:
    httpMethod: POST
    name: Check the HTTP Method
  routing:
    success: ../Extract REST Request Attributes
    failure: ../Method Error
- type: ExtractRESTAttributesFilter
  fields:
    queryAttributePrefix: http.querystring
    decode: true
    name: Extract REST Request Attributes
  routing:
    success: ../Is an 'OrderProduct' request ?
- type: CompareAttributeFilter
  fields:
    name: Is an 'OrderProduct' request ?
  routing:
    success: ../Is a known product ?
    failure: ../Method Error
  children:
  - type: AttributeCompare
    fields:
      attrName: ${http.path[3]}
      matchType: IS
      expression: OrderProduct
- type: CompareAttributeFilter
  fields:
    matchingRule: MATCH_ONE
    name: Is a known product ?
  routing:
    success: ../Set Message
    failure: ../Method Error
  children:
  - type: AttributeCompare
    fields:
      attrName: ${http.path[4]}
      matchType: IS
      expression: magnet
  - type: AttributeCompare
    fields:
      attrName: ${http.path[4]}
      matchType: IS
      expression: belt
  - type: AttributeCompare
    fields:
      attrName: ${http.path[4]}
      matchType: IS
      expression: cape
- type: ChangeMessageFilter
  fields:
    outputContentType: application/json
    name: Set Message
    body: '{{file "OrderProduct-Files/Set Message.json"}}'
  routing:
    success: ../Reflect 200 OK
  logging:
    fatal: 'Error in setting the message. Error: ${circuit.exception}'
    failure: Failed in setting the message
    success: Success in setting the message
- type: Reflector
  fields:
    name: Reflect 200 OK
  logging:
    fatal: 'Error occurred while echoing the message. Error: ${circuit.exception}'
    failure: Failed to echo back the message
    success: Successfully echoed back the message
- type: ChangeMessageFilter
  fields:
    body: '{"error":"Invalid request"}'
    outputContentType: application/json
    name: Method Error
  routing:
    success: ../Reflect 400 Bad Request
  logging:
    fatal: 'Error in setting the message. Error: ${circuit.exception}'
    failure: Failed in setting the message
    success: Success in setting the message
- type: Reflector
  fields:
    httpResponseStatus: 400
    name: Reflect 400 Bad Request
  logging:
    fatal: 'Error occurred while echoing the message. Error: ${circuit.exception}'
    failure: Failed to echo back the message
    success: Successfully echoed back the message
