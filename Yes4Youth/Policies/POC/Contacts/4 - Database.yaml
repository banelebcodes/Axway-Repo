---
type: FilterCircuit
fields:
  start: ./Extract REST Request Attributes
  name: 4 - Database
  description: ""
children:
- type: ExtractRESTAttributesFilter
  fields:
    decode: true
    name: Extract REST Request Attributes
  routing:
    success: ../Retrieve from HTTP header
- type: AttributeExtractHTTPHeaderFilter
  fields:
    headerName: Authorization
    attributeName: payload
    name: Retrieve from HTTP header
  routing:
    success: ../Trace Filter{1}
  logging:
    fatal: 'Error occurred while extracting attributes from HTTP header. Error: ${circuit.exception}'
    failure: Failed to extract attribute HTTP header
    success: Extracted attribute from HTTP header
- type: TraceFilter
  fields:
    traceMsg: ""
    traceLevel: 3
    name: Trace Filter{1}
  routing:
    success: ../Scripting Language
  logging:
    fatal: 'Error while tracing the message properties. Error: ${circuit.exception}'
    failure: Failed to trace the message properties
    success: Traced the message properties
- type: JavaScriptFilter
  fields:
    engineName: groovy
    requiredProperties: []
    generatedProperties: []
    consumedProperties: []
    name: Scripting Language
    script: '{{file "4 - Database-Files/Scripting Language.groovy"}}'
  routing:
    success: ../Trace Filter
  logging:
    fatal: 'Error while attempt to run script filter. Error: ${circuit.exception}'
    failure: Failed script filter
    success: Passed script filter
- type: TraceFilter
  fields:
    traceMsg: "${payload}\r\n${contactId}\r\n"
    traceLevel: 3
    traceBody: true
    doIndent: true
    name: Trace Filter
  routing:
    success: ../JWT Verify
  logging:
    fatal: 'Error while tracing the message properties. Error: ${circuit.exception}'
    failure: Failed to trace the message properties
    success: Traced the message properties
- type: JWTVerifyFilter
  fields:
    keyDiscoverySelection: 1
    usePublicKey: false
    publicKeyAlias: /null
    sharedKey: |-
      ZmY5YzFhYjAyOTVlMmNiMzRjMzNhZGIwZmJjMDZjNDE5YTAwODJlNjZlYjU4ZmVjYmI3NDgxMWNh
      ODZmMTc1Mg==
    useJwkKey: false
    critHeader: []
    signAlgorithms:
    - HS256
    - RS256
    - ES256
    - PS256
    contentTypes: []
    types: []
    name: JWT Verify
  routing:
    success: ../Retrieve from or write to database
    failure: ../Reflect Message{1}
- type: AttributeExtractDbFilter
  fields:
    dbConn: /External Connections/Database Connections/vTiger Database
    userIdentityAttribName: ""
    placeDbResultsIntoUserAttributeList: false
    messageAttrPrefix: result
    name: Retrieve from or write to database
  routing:
    success: ../Scripting Language{1}
  logging:
    fatal: 'Error occurred while extracting attributes from database/entity store. Error: ${circuit.exception}'
    failure: Failed to extract attributes from database/entity store
    success: Extracted attributes from database/entity store for ${attribute.subject.id}
  children:
  - type: Query
    fields:
      name: Select
      sqlStatement: '{{file "4 - Database-Files/Retrieve from or write to database - Select.sql"}}'
- type: JavaScriptFilter
  fields:
    engineName: groovy
    requiredProperties: []
    generatedProperties: []
    consumedProperties: []
    name: Scripting Language{1}
    script: '{{file "4 - Database-Files/Scripting Language{1}.groovy"}}'
  routing:
    success: ../Set Message
  logging:
    fatal: 'Error while attempt to run script filter. Error: ${circuit.exception}'
    failure: Failed script filter
    success: Passed script filter
- type: ChangeMessageFilter
  fields:
    body: ${resultString}
    outputContentType: application/json
    name: Set Message
  routing:
    success: ../Reflect Message
  logging:
    fatal: 'Error in setting the message. Error: ${circuit.exception}'
    failure: Failed in setting the message
    success: Success in setting the message
- type: Reflector
  fields:
    name: Reflect Message
  logging:
    fatal: 'Error occurred while echoing the message. Error: ${circuit.exception}'
    failure: Failed to echo back the message
    success: Successfully echoed back the message
- type: Reflector
  fields:
    httpResponseStatus: 401
    name: Reflect Message{1}
  logging:
    fatal: 'Error occurred while echoing the message. Error: ${circuit.exception}'
    failure: Failed to echo back the message
    success: Successfully echoed back the message
